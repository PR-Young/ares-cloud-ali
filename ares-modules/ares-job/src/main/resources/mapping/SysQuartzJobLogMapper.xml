<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ares.quartz.persistence.dao.ISysQuartzJobLogDao">
    <resultMap id="SysQuartzJobLog" type="com.ares.quartz.persistence.model.SysQuartzJobLog">
        <id column="ID_" jdbcType="BIGINT" property="id"/>
        <result column="JOB_NAME_" jdbcType="VARCHAR" property="jobName"/>
        <result column="JOB_GROUP_" jdbcType="VARCHAR" property="jobGroup"/>
        <result column="INVOKE_TARGET_" jdbcType="VARCHAR" property="invokeTarget"/>
        <result column="JOB_MESSAGE_" jdbcType="VARCHAR" property="jobMessage"/>
        <result column="STATUS_" jdbcType="INTEGER" property="status"/>
        <result column="EXCEPTION_INFO_" jdbcType="VARCHAR" property="exceptionInfo"/>
        <result column="START_TIME_" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="FINISH_TIME_" jdbcType="TIMESTAMP" property="finishTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID_, JOB_NAME_, JOB_GROUP_, INVOKE_TARGET_, JOB_MESSAGE_, STATUS_, EXCEPTION_INFO_, START_TIME_,
        FINISH_TIME_
    </sql>
    <select id="list" parameterType="java.util.Map" resultMap="SysQuartzJobLog">
        select
        <include refid="Base_Column_List"/>
        from `sys_quartz_job_log`
        <where>
        <if test="search != null">
            and (`JOB_NAME_` like '%${search}%' or `JOB_GROUP_` like '%${search}%')
        </if>
        </where>
        <if test="sort != null">
            order by ${sort}
        </if>
        <if test="sort == null">
            order by `ID_` desc
        </if>
    </select>
    <delete id="deleteByIds" parameterType="java.util.List">
        delete from `sys_quartz_job_log`
        where `ID_` in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.ares.quartz.persistence.model.SysQuartzJobLog">
        insert into sys_quartz_job_log (ID_, JOB_NAME_, JOB_GROUP_,
        INVOKE_TARGET_, JOB_MESSAGE_, STATUS_,
        EXCEPTION_INFO_, START_TIME_, FINISH_TIME_
        )
        values (#{id,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR},
        #{invokeTarget,jdbcType=VARCHAR}, #{jobMessage,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
        #{exceptionInfo,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="update" parameterType="com.ares.quartz.persistence.model.SysQuartzJobLog">
        update sys_quartz_job_log
        <set>
            <if test="jobName != null">
                JOB_NAME_ = #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="jobGroup != null">
                JOB_GROUP_ = #{jobGroup,jdbcType=VARCHAR},
            </if>
            <if test="invokeTarget != null">
                INVOKE_TARGET_ = #{invokeTarget,jdbcType=VARCHAR},
            </if>
            <if test="jobMessage != null">
                JOB_MESSAGE_ = #{jobMessage,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS_ = #{status,jdbcType=INTEGER},
            </if>
            <if test="exceptionInfo != null">
                EXCEPTION_INFO_ = #{exceptionInfo,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                START_TIME_ = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishTime != null">
                FINISH_TIME_ = #{finishTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID_ = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectList" parameterType="com.ares.quartz.model.query.SysQuartzJobLogQuery"
            resultMap="SysQuartzJobLog">
        select
        <include refid="Base_Column_List"/>
        from `sys_quartz_job_log`
        <where>
        <if test="jobName != null and jobName != ''">
            and `JOB_NAME_` like concat('%', #{jobName}, '%')
        </if>
        <if test="jobGroup != null and jobGroup != ''">
            and `JOB_GROUP_` like concat('%', #{jobGroup}, '%')
        </if>
        <if test="status != null and status != ''">
            and `STATUS_` like concat('%', #{status}, '%')
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(`START_TIME_`,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
            AND date_format(`START_TIME_`,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
        </where>
    </select>

    <update id="cleanJobLog">
        truncate table `sys_quartz_job_log`
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="SysQuartzJobLog">
        select
        <include refid="Base_Column_List"/>
        from `sys_quartz_job_log`
        where `ID_` = #{id,jdbcType=BIGINT}
    </select>
</mapper>
